const { Markup } = require("telegraf");
const User = require("../models/User");

const sendMenu = async (ctx) => {
    try {
        if (!ctx) return;

        const fields = [
            [
                Markup.button.callback(
                    "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–æ–∫–µ—Ç–∞",
                    "start_info"
                ),
            ],
            [Markup.button.callback("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ", "me_info")],
            [
                Markup.button.callback(
                    "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º—ã—Ö –¥–º —á–∞—Ç–∞—Ö",
                    "dm_chats_info"
                ),
            ],
            [Markup.button.callback("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–∞", "me_status")],
        ];

        await ctx.replyWithHTML(
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",
            Markup.inlineKeyboard(fields)
        );
    } catch (error) {
        console.log(error);
    }
};

const sendOnlineSettings = async (ctx) => {
    try {
        if (!ctx) return;

        await ctx.deleteMessage();

        const user = await User.findOne({ chat_id: ctx.chat.id });
        if (!user) {
            return;
        }

        const activeMessage = user.keep_alive?.active
            ? "–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –æ–Ω–ª–∞–π–Ω–∞: –≤–∫–ª—é—á–µ–Ω–æ"
            : "–ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –æ–Ω–ª–∞–π–Ω–∞: –≤—ã–∫–ª—é—á–µ–Ω–æ";

        const fields = [
            [Markup.button.callback(activeMessage, "me_toggle_keep_alive")],
            [
                Markup.button.callback(
                    "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å",
                    "me_set_status"
                ),
            ],
            [Markup.button.callback("<< –ù–∞–∑–∞–¥", "send_menu")],
        ];

        await ctx.replyWithHTML(
            "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É",
            Markup.inlineKeyboard(fields)
        );
    } catch (error) {
        console.log(error);
    }
};

const sendOnlineStatuses = async (ctx) => {
    try {
        if (!ctx) return;

        await ctx.deleteMessage();

        const fields = [
            [
                Markup.button.callback("Online üü¢", "me_set_status online"),
                Markup.button.callback("Away üü°", "me_set_status away"),
            ],

            [
                Markup.button.callback("Busy üî¥", "me_set_status busy"),
                Markup.button.callback("Offline ‚ö™", "me_set_status offline"),
            ],
            [Markup.button.callback("<< –ù–∞–∑–∞–¥", "me_status")],
        ];

        await ctx.replyWithHTML(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏",
            Markup.inlineKeyboard(fields)
        );
    } catch (error) {
        console.log(error);
    }
};

module.exports = { sendMenu, sendOnlineSettings, sendOnlineStatuses };
